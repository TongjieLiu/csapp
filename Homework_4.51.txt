# A homework problem solution for the CS:APP3e
#
# Copyright (C) 2022 Tongjie Liu <tongjieandliu@gmail.com>.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

	Instruction iaddq V, rB is actually equivalent to a code sequence
consisted of 2 instructions that have already existed in Y86-64 ISA:
	irmovq	V, REG
	addq	REG, rB

	Therefore, we could implement iaddq based on these 2 instructions,
and here is the details organized in the original 6 stages for SEQ:
			iaddq	V, rB
Fetch			icode:ifun <- M_1[PC]
			rA:rB <- M_1[PC + 1]
			valC <- M_8[PC + 2]
			valP <- PC + 10

Decode			valB <- R[rB]

Execute			valE <- valB + valC
			Set CC

Memory

Write back		R[rB] <- valE

PC update		PC <- valP
